// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_2")
}

model User {
  userId   Int     @id @unique @default(autoincrement())
  username String  @unique
  password String
  email    String  @unique
  role     Role    @default(USER)
  order    Order[]

  @@map("user")
}

model Customer {
  customerId Int    @id @unique @default(autoincrement())
  name       String
  phone      String @unique
  address    String

  order Order[]

  @@map("customer")
}

model Order {
  orderId      String    @id @unique
  rentDate     DateTime  @default(now())
  returnDate   DateTime?
  status       Int
  note         String
  addressOrder String
  customerId   Int
  customer     Customer  @relation(fields: [customerId], references: [customerId])

  createdBy   Int
  user        User          @relation(fields: [createdBy], references: [userId])
  orderDetail OrderDetail[]
  payment     Payment?

  @@map("order")
}

model OrderDetail {
  orderDetailId Int    @id @unique @default(autoincrement())
  orderId       String
  order         Order  @relation(fields: [orderId], references: [orderId])

  productCode String
  product     Product @relation(fields: [productCode], references: [productId])
  quantity    Int
  priceEach   String?

  @@map("orderDetail")
}

model Product {
  productId   String        @id @unique
  orderDetail OrderDetail[]
  name        String
  productType Int
  productLine ProductLine   @relation(fields: [productType], references: [id])

  description String

  @@map("product")
}

model ProductLine {
  id          Int       @id @unique @default(autoincrement())
  product     Product[]
  name        String
  description String

  @@map("productLine")
}

model Payment {
  id      Int    @id @unique @default(autoincrement())
  total   String
  orderId String @unique
  order   Order  @relation(fields: [orderId], references: [orderId])
  debt    String
  paid    String

  @@map("payment")
}

enum Role {
  USER
  ADMIN
}
